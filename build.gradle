buildscript {
    ext.kotlin_version = '1.0.0-beta-2423'
    ext.kotlinVersion = '1.0.0-beta-2423'
    ext.androidAnnotationsVersion = '3.3.2'
    repositories {
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath "org.androidannotations:androidannotations-api:$androidAnnotationsVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'android-apt'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    apt "org.androidannotations:androidannotations:$androidAnnotationsVersion"
    compile 'com.android.support:support-v4:23.1.1'
    compile "org.androidannotations:androidannotations-api:$androidAnnotationsVersion"
    compile 'org.hamcrest:hamcrest-library:1.3'
    compile 'org.mockito:mockito-core:1.9.5'
    compile 'com.google.dexmaker:dexmaker-mockito:1.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 23
    }

    sourceSets {
        instumentTest.java.srcDirs += 'src/instrumentTest/kotlin'
        instumentTest.java.srcDirs += 'src/instrumentTest/java'
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    signingConfigs {
        release {
            storeFile file("/home/tass/Keystore.jks")
            storePassword "*****"
            keyAlias "Sinclair"
            keyPassword "*****"
        }
    }

    buildTypes {
        release {
            debuggable false
            zipAlignEnabled true
            jniDebuggable false
            signingConfig signingConfigs.release
        }
    }
}

task askForPasswords << {
    // Must create String because System.readPassword() returns char[]
    // (and assigning that below fails silently)
    def storePw = new String(System.console().readPassword("\nKeystore password: "))
    def keyPw = new String(System.console().readPassword("\nKey password: "))

    android.signingConfigs.release.storePassword = storePw
    android.signingConfigs.release.keyPassword = keyPw
}

tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn "askForPasswords"
    }
}

apt {
    arguments {
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
    }
}